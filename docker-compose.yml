version: '3.8'

networks:
  coolstuff-enterprise-network:
    name: coolstuff-enterprise-network
    driver: bridge

volumes:
  mysqldata:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: '${HOME}/server/mysql/data'

services:
  openldap:
    image: osixia/openldap:1.5.0
    container_name: coolstuff_openldap
    environment:
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "Coolstuff Enterprise"
      LDAP_DOMAIN: "coolstuff-enterprise.org"
      LDAP_BASE_DN: ""
      LDAP_ADMIN_PASSWORD: "admin"
      LDAP_CONFIG_PASSWORD: "config"
      LDAP_READONLY_USER: "false"
      #LDAP_READONLY_USER_USERNAME: "readonly"
      #LDAP_READONLY_USER_PASSWORD: "readonly"
      LDAP_RFC2307BIS_SCHEMA: "false"
      LDAP_BACKEND: "mdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      #LDAP_REPLICATION_CONFIG_SYNCPROV: 'binddn="cn=admin,cn=config" bindmethod=simple credentials="$$LDAP_CONFIG_PASSWORD" searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical'
      #LDAP_REPLICATION_DB_SYNCPROV: 'binddn="cn=admin,$$LDAP_BASE_DN" bindmethod=simple credentials="$$LDAP_ADMIN_PASSWORD" searchbase="$$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1 starttls=critical'
      #LDAP_REPLICATION_HOSTS: "#PYTHON2BASH:['ldap://ldap.example.org','ldap://ldap2.example.org']"
      KEEP_EXISTING_CONFIG: "false"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    tty: true
    stdin_open: true
    volumes:
      - /var/lib/ldap
      - /etc/ldap/slapd.d
      - /container/service/slapd/assets/certs/
    ports:
      - "389:389"
      - "636:636"
    # For replication to work correctly, domainname and hostname must be
    # set correctly so that "hostname"."domainname" equates to the
    # fully-qualified domain name for the host.
    domainname: "coolstuff-enterprise.org"
    hostname: "ldap-server"
    networks:
      coolstuff-enterprise-network:
        aliases:
          - openldap

  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: coolstuff_phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: "openldap"
      PHPLDAPADMIN_HTTPS: "false"
    ports:
      - "9007:80"
    depends_on:
      - openldap
    networks:
      coolstuff-enterprise-network:
        aliases:
          - phpldapadmin
  
  idp:
    image: kenchan0130/simplesamlphp
    container_name: coolstuff-idp-service-provider
    environment:
      SIMPLESAMLPHP_SP_ENTITY_ID: http://app.example.com
      SIMPLESAMLPHP_SP_ASSERTION_CONSUMER_SERVICE: http://localhost/simplesaml/module.php/saml/sp/saml2-acs.php/test-sp
      SIMPLESAMLPHP_SP_SINGLE_LOGOUT_SERVICE: http://localhost/simplesaml/module.php/saml/sp/saml2-logout.php/test-sp
    ports:
      - 9002:8080
    networks:
      coolstuff-enterprise-network:
        aliases:
          - idp_service_provider

  admin_backend:
    image: nginx:1.21.6-alpine
    container_name: coolstuff-admin-nginx
    restart: unless-stopped
    ports:
      - "9001:80"
    volumes:
      - ./src:/var/www
      - ./.docker/nginx:/etc/nginx/conf.d
    networks:
      coolstuff-enterprise-network:
        aliases:
          - admin_backend

  admin:
    build:
      context: .docker/php
      dockerfile: dockerfile
    container_name: coolstuff-admin
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      XDEBUG_MODE: develop,debug,coverage
      XDEBUG_CONFIG:
        client_host=host.docker.internal
        start_with_request=yes
      PHP_IDE_CONFIG: docker
    volumes:
      - ./src:/var/www
      - ./.docker/php/php.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      coolstuff-enterprise-network:
        aliases:
          - admin

  mysql:
    image: mysql:8.0
    container_name: coolstuff-admin-rdbms
    environment:
      MYSQL_ROOT_PASSWORD: '$${MYSQL_ROOT_PASSWORD}'
      MYSQL_DATABASE: '$${DB_DATABASE}'
      MYSQL_USER: '$${DB_USERNAME}'
      MYSQL_PASSWORD: '$${DB_PASSWORD}'
    ports:
      - "9006:3306"
    volumes:
      - mysqldata:/var/lib/mysql
    networks:
      coolstuff-enterprise-network:
        aliases:
          - admin_mysql

  phpmyadmin:
    image: phpmyadmin:5.2.0
    container_name: coolstuff-rdbms-admin
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - "9004:80"
    networks:
      coolstuff-enterprise-network:
        aliases:
          - db-admin

  mailhog:
    image: mailhog/mailhog:latest
    container_name: coolstuff-smtp
    ports:
      - "8025:1025"
      - "9005:8025"
    networks:
      coolstuff-enterprise-network:
        aliases:
            - mailhog

  soketi:
    image: 'quay.io/soketi/soketi:latest-16-alpine'
    container_name: coolstuff-broadcaster
    environment:
      SOKETI_DEBUG: '1'
      SOKETI_METRICS_SERVER_PORT: '9601'
      SOKETI_DEFAULT_APP_ID: '$${PUSHER_APP_ID}'
      SOKETI_DEFAULT_APP_KEY: '$${PUSHER_APP_KEY}'
      SOKETI_DEFAULT_APP_SECRET: '$${PUSHER_APP_SECRET}'
    ports:
      - '${SOKETI_PORT:-6001}:6001'
      - '${SOKETI_METRICS_SERVER_PORT:-9601}:9601'
    networks:
      coolstuff-enterprise-network:
        aliases:
            - soketi

  mysql_testing:
    image: mysql:5.7
    container_name: tribes-testing-db
    environment:
      MYSQL_ROOT_PASSWORD: 'testing'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      MYSQL_RANDOM_ROOT_PASSWORD: 0
      MYSQL_DATABASE: 'coolstuff_test_db'
      MYSQL_USER: 'testuser'
      MYSQL_PASSWORD: 't3st!n6'
    tmpfs:
      - /var/lib/mysql
    networks:
      coolstuff-enterprise-network:
      tribes-app-network:
        aliases:
          - mysql_testing